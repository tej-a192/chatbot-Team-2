services:
  # Qdrant Vector DB Service
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant_service
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - ai_tutor_network
    restart: unless-stopped

  # Neo4j Graph DB Service
  neo4j:
    image: neo4j:5.17.0
    container_name: neo4j_service
    ports:
      - "7474:7474"
      - "7687:7687" # Corrected internal port for Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
    environment:
      - NEO4J_AUTH=neo4j/password
    networks:
      - ai_tutor_network
    restart: unless-stopped

  # Redis Caching Service
  redis:
    image: redis:7.2-alpine
    container_name: redis_service
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai_tutor_network
    restart: unless-stopped

  # Elasticsearch Logging Service
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.3
    container_name: elasticsearch
    environment:
      - "discovery.type=single-node"
      - "xpack.security.enabled=false"
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - ai_tutor_network
    restart: unless-stopped

  # Logstash Pipeline Service
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.3
    container_name: logstash
    # REMOVE the 'ports' section for 5044
    volumes:
      # Keep this line
      - ./server/logging/pipeline/:/usr/share/logstash/pipeline/:ro
      # ADD this new line to mount the log file
      - ./server/logs/:/usr/share/logstash/logs/:ro
    # REMOVE the 'command' line
    depends_on:
      - elasticsearch
    networks:
      - ai_tutor_network
    restart: unless-stopped

  # Kibana Visualization Service
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.3
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - ai_tutor_network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - ai_tutor_network
    restart: unless-stopped

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - ai_tutor_network
    restart: unless-stopped


volumes:
  qdrant_data:
  neo4j_data:
  neo4j_logs:
  redis_data:
  elasticsearch_data:
  prometheus_data:
  grafana_data:

networks:
  ai_tutor_network:
    driver: bridge